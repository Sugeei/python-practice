# to see whether updated or not found
result = mongodb.get_collection(mcollection).update_one({"taskId": task_id}, {"$set": {key: value}})
            if result.raw_result['nModified']==0:
                logger.warning("document do not exist,  update taskid=%s , %s %s" % (task_id, key, value))
            else:
                self.log(task_id, "update %s=%s" % (key, value))

db.getCollection('invest_brain_stock_scauter').find({"date":{$gte:"2016-05-16", $lte:"2016-05-18"}})


https://kb.objectrocket.com/mongo-db/how-to-update-a-mongodb-document-in-python-356#the+mongodb+update+operators+for+document+fields

mongo_db.get_collection(collection).find({"progress" : k, "insertTime": {"$regex": publishdate}}).count()

db.getCollection('report_html').find({"_id" : ObjectId("5d1b38a9de04a91c78d631b5")}).forEach( function (x) {
  var isoDate = x.publishDate
  var isoString = isoDate.toISOString()

  x.publishDate = isoString.substr(0,10); // convert field to string
  db.report_html.save(x);
});

The way to change the type of a field
db.getCollection('rpt_earnings_gen').find({"pubDate" : /2019-05-23 1/, "insertDate" : "2019-05-23"}).forEach( function (x) {
  x.ts = "2019-05-24 14:00:00"; // convert field to string
  db.rpt_earnings_gen.save(x);
});

db.getCollection('rpt_earnings_gen').find({"insertDate" : "2019-03-04"}).forEach(
function (x) {
    x.db_id = new NumberInt(x.db_id);
    db.rpt_earnings_gen.save(x)
    }
)


not equal to the given value
db.getCollection('report_html').remove({"taskId" : {"$ne":"H3BKdALZRHVOZNx6KSlz6w"}})

To see whether a key exists or not
db.getCollection('solid_pdfs').find({"status" : {"$exists":false}})

A way to show only specified columns
db.getCollection('solid_pdfs').find({"status" :”done”}, {“progress”: 1})

7 simple speed solutions for mongo
https://www.sitepoint.com/7-simple-speed-solutions-mongodb/

GROUP BY db_id
db.getCollection('rpt_earnings_gen').aggregate(
    {"$group" : { "_id": "$db_id", "count": { "$sum": 1 } } }
)


db.getCollection('report_html').aggregate(
    {"$group" : { "_id": "$taskId", "count": { "$sum": 1 } } },
    {"$sort":{"count":-1}}
)


模糊匹配
db.getCollection('rpt_earnings_boshi').find({"err_msg":/Permission denied/})
db.getCollection('rpt_earnings_boshi').updateMany({"err_msg":/Permission denied/}, {$set:{"status":"wait"}})

db.getCollection('rpt_earnings_gen').aggregate([
    {"$match" : {status: "extracted"}},
    {"$group" : {_id:"$ticker", count:{$sum:1}}}
])


posts.find({
    author : {
        $in : ['friend1','friend2','friend3'....'friend40']
    }
})

db.getCollection('solid_pdfs').find({"docType":{"$exists": false}})

db.getCollection('solid_pdfs').updateMany({"docType":{"$exists": false}}, {"$set":{"docType":9}})
db.getCollection('solid_pdfs').updateMany({"docType":9.0}, {"$set":{"docType":NumberInt(9)}})
NumberInt

Finding the Min and Max values in MongoDB

In MongoDB, the min() and max() functions work as limitors - essentially the same as “gte” (>=) and “lt” (<).

To find the highest (maximum) value in MongoDB, you can use this command;
db.thiscollection.find().sort({"thisfieldname":-1}).limit(1)
This essentially sorts the data by the fieldname in decending and takes the first value.

The lowest (minimum) value can be determined in a similar way.
db.thiscollection.find().sort({"thisfieldname":1}).limit(1)
Note that if the dataset is large and the field is not indexed, this could take a long time.

If you want to find the max using a “group by” equivalent, you need to use map-reduce.

db.thiscollection.group(  s
    {key: {name:true},
        reduce: function(obj, prev) {
            if (prev.maxValue < obj.thisfieldname) {
                prev.maxValue = obj.thisfieldname;
            }
        },
    initial: { maxValue: 0 }}
);



mongodb中字符串日期的比较
db.getCollection('ib_msgs').find({"msg.payload.id": "invest_brain_vequspo","msg.payload.data_date":{$gte:"20170923",$lte:"20171013"}}).sort({_id:-1})


判断返回为空
if 0 == mongo_db.get_collection(self.mongo_col).find({'msg.payload.id':
task_id, 'msg.payload.data_date': data_date}).count():


db.collection.deleteOne()
ObjectId("591d0b4fe24225ef4dac3f0f")


db.getCollection('ib_msgs').find().sort({_id:-1}) 倒序

生产环境 mongodb://app_dataifs_rw:IuSooOl3w2ylFE2Wn@mongodb01-dbp.datayes.com,mongodb02-dbp.datayes.com,mongodb03-dbp.datayes.com/dataifs
开发环境 mongodb://app_dataifs_rw:uaTQIDzoq28o3gf4n@nosql06.wmcloud-dev.com:27017/dataifs


db.getCollection('ib_msgs').find({"msg.payload.id": "invest_brain_industry_money_flow"})

db.getCollection('ib_msgs').find({"msg.payload.id": "invest_brain_industry_money_flow","msg.payload.data_date":'20171011'})

查找日期最小值
db.getCollection('ib_msgs').find({"msg.payload.id": "invest_brain_industry_money_flow"}).sort({"msg.payload.data_date": 1}).limit(1)

查找给定id, delivery_meta,结果按日期升序
db.getCollection('ib_msgs').find({"msg.payload.id": "invest_brain_industry_money_flow",delivery_meta: {}}).sort({"msg.payload.data_date": 1})




